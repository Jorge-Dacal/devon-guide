:toc: macro
toc::[]

# Release notes Devonfw 2.1 "Balu"

## New features, improvements and updates

### Introduction

We are proud to present the new release of Devonfw, version “2.1” which we've baptized “Balu”. A major focus for this release is developer productivity. So that explains the name, as Balu is not just big, friendly and cuddly but also was very happy to let Mowgli do the work for him.

### Cobigen code-generator UI code generation and more

The Cobigen incremental code generator which is part of Devonfw has been significantly improved. Based on a single data schema it can generate the JPA/Hibernate code for the whole service layer (from data-access code to web services) for all CRUD operations. When generating code, Cobigen is able to detect and leave untouched any code which developers have added manually. 

In the new release it supports Spring Data for data access and it is now capable of generating the whole User Interface as well: data-grids and individual rows/records with support for filters, pagination etc.  That is to say: Cobigen can now generate automatically all the code from the server-side database access layer all the way up to the UI “screens” in the web browser. 

Currently we support Sencha Ext JS with support for Angular 2 coming soon. The code generated by Cobigen can be opened and used by Sencha Architect, the visual design tool, which enables the programmer to extend and enhance the generated UI non-programmatically. When Cobigen regenerates the code, even those additions are left intact. All these features combined allow for an iterative, incremental way of development which can be up to an order of an magnitude more productive than” programming manual”

Cobigen can now also be used for code-generation within the context of an engagement. It is easily extensible and the process of how to extend it for your own project is well documented. This becomes already worthwhile (“delivers ROI”) when having 5+ identical elements within the project. 

For more information see: XXX
And seeing is believing. Watch the video: XXXX

### Devcon enhancements

The Devon Console, Devcon, is a cross-platform command line tool running on the JVM that provides many automated tasks around the full life-cycle of Devon applications, from installing the basic working environment and generating a new project, to running a test server and deploying an application to production. It can be used by the engagements to integrate with their proprietary tool chain.

In this new release we have added an optional graphical user interface (with integrated help) which makes using Devcon even easier to use. Another new feature is that it is now possible to easily extend it with commands just by adding your own or project specific Javascript files. This makes it an attractive option for project task automation. You can find more information in the document: XXX

### Ready for the Cloud 

Devonfw is in active use in the Cloud, with projects running on IBM Bluemix and on Amazon AWS. The focus is very much to keep Cloud-specific functionality decoupled from the Devonfw core. The engagement can choose between - and easily configure the use of - either CloudFoundry or Spring Cloud (alternatively, you can run Devonfw in Docker containers in the Cloud as well. See elsewhere in the release notes). For more information 
about how to configure Devonfw for use in the cloud see: XXX

### Spring Data 

The java server stack within Devonfw, OASP4J,  is build on a very solid DDD architecture  which uses JPA for its data access layer. We now offer integration of Spring Data as an alternative or to be used in conjunction with JPA. Spring Data offers significant advantages over JPA through its query mechanism which allows the developer to specify complex queries in an easy way. Overall working with Spring Data should be quite more productive compared with JPA for the average or junior developer. And extra advantage is that Spring Data also allows - and comes with support for - the usage of NoSQL databases like MongoDB, Cassandra, DynamoDB etc. THis becomes especially critical in the Cloud where NoSQL databases typically offer better scalability than relational databases.   
For more information see: XXX

### Videos content in the Devonfw Guide

The Devonfw Guide is the single, authoritative tutorial and reference (“cookbook”) for all things Devonfw, targeted at the general developer working with the platform (there is another document for Architects).  It is clear and concise but because of the large scope and wide reach of Devonfw, it comes with a hefty 370+ pages. For the impatient - and sometimes images do indeed say more than words - we've added 17 videos to the Guide which significantly speed up getting started with the diverse aspects of Devonfw.

For more information see: XXX

### Containerisation with Docker and the Production Line

Docker (see: https://www.docker.com/) allows applications to be isolated into “containers” with instructions for exactly what they need to survive that can be easily ported from machine to machine. Docker containers resemble virtual machines but are far more resource efficient. Because of this, Docker and related technologies like Kubernetes are taking the Enterprise and Cloud by storm. We have certified and documented the usage of Devonfw on Docker so we can now firmly state that “Devonfw is Docker” ready. All the more so as the iCSD Production Line is now supporting Devonfw as well. The Production Line is a Docker based set of methods and tools that make possible to develop custom software to our customers on time and with the expected quality. By having first-class support for Devonfw on the Production Line, iCSD has got an unified, integral solution which covers all the phases involved on the application development cycle from requirements to testing and hand-off to the client. 

See: XXXX and XXXX

### Eclipse Neon 

Devonfw comes with its own pre configured and enhanced Eclipse based IDE:  the Open Source “OASP IDE“ and “Devonfw Distr” which falls under Capgemini IP. We've updated both versions to the latest stable version of Eclipse, Neon. From Balu onwards we support the IDE on Linux as well and we offer downloadable versions for both Windows and Linux. 

See: XXXX 

### Default Java 8 with Java 7 compatibility

From version 2.1. “Balu” onwards, Devonfw is using by default Java 8 for both the tool-chain as well as the integrated development environments. However, both the framework as well as the IDE and tool-set remain fully backward compatible with Java 7. We have added documentation to help configuring aspects of the framework to use Java 7 or to upgrade existing projects to Java 8. See: XXX

### Full Linux support

In order to fully support the move towards the Cloud, from version 2.1. “Balu” onwards, Devonfw is fully supported on Linux. Linux is the de-facto standard for most Cloud providers. We currently only offer first-class support for Ubuntu 14.04 LTS onward but most aspects of Devonfw should run without problems on other and older distributions as well. The usage of Devonfw on Linux is documented here: XXX

### Angular 2

With the official release of Angular 2 and TypeScript 2, we're slowly but steadily moving to embrace  these important new players in the  web development scene. We keep supporting the Angular 1 based OASP4js framework and are planning a migration of this framework to Angular 2 in the near future. For “Balu” we've have decided to integrate “vanilla” Angular 2.

We have migrated the Restaurant Sample application to serve as a, documented and supported, blueprint for Angular 2 applications. Furthermore, we support three “kickstarter” projects which help engagment getting started with Angular2 - either using Bootstrap or Google´s Material Design - or, alternatively, Ionic 2 (the mobile framework on top of Angular 2). For more information see: XXX

### Initial ATOM support

Atom is a text editor that's modern, approachable, yet hackable to the core—a tool you can customize to do anything but also use productively without ever touching a config file. It is turning into a standard for modern web development. In Devonfw 2.1 “Balu” we provide a script which installs automatically the most recent version of Atom in the Devonfw distribution with a preconfigured set of essential plugins. 

INSERT OASP4J 2.1.2 RELEASE NOTES HERE 

### Devon4Sencha

Devon4Sencha is an alternative view layer for web applications developed with Devonfw. It is based on Sencha Ext JS. As it requires a license for commercial applications it is not provided as Open Source and is considered to be part of the IP of Capgemini.

These libraries provide support for creating SPA (Single Page Applications) with a very rich set of components for both desktop and mobile. In the new version we extend this functionality to support for “Universal Apps”, the Sencha specific term for true multi-device applications which make it possible to develop a single application for desktop, tablet as well as mobile devices. In the latest version Devon4Sencha has been upgraded to support Ext JS 6.2 and we now support the usage of Cobigen as well as Sencha Architect as extra option to improve developer productivity.
For more information about the update see: XXX

### Database support

Through JPA (and now Spring Data as well) Devonfw supports many databases. In Balu we've extended this support to prepared configuration, extensive documentations and supporting examples for all major “Enterprise” DB servers. So it becomes even easier for engagements to start using these standard database options. Currently we provide this extended support for Oracle, Microsoft SQL Server, MySQL and PostgreSQL.
For more information see: XXX

### File upload and download 

File up and download was supported in previous version of the framework, but as these operations are common but complex, we've extended the base functionality and improved the available documentation so it becomes substantially easier to offer both File up- as well as download in Devonfw based applications. See: XXX

### Internationalisation (I18N) improvements

Likewise, existing basic Internationalisation (I18N) support has been significantly enhanced through an new Devonfw module and extended to support Ext JS and Angular 2 apps as well. This means that both server as well as client side applications can be made easily to support multiple languages (“locales”), using industry standard tools and without touching programming code (essential when working with teams of translators). For more information see: XXX

### Asynchronous HTTP support 

Asynchronous HTTP is an important feature allowing so-called “long polling” HTTP Requests (for streaming applications, for example) or with requests sending large amounts of data. By making HTTP Requests asynchronous, Devonfw server instances can better support these types of use-cases while offering far better performance. Documentation about how to include the new Devonfw module implementing this feature can be found at: XXX

### Security and License guarantees

In Devonfw security comes first. The components of the framework are designed and implemented according to the recommendations and guidelines as specified by OWASP in order to confront the top 10 security vulnerabilities.

From version 2.1 “Balu” onward we certify that Devonfw has been scanned by software from “Black Duck”. This verifies that Devonfw is based on 100% Open Source Software (non Copyleft) and demonstrates that at moment of release there are no known, critical security flaws. Less critical issues are clearly documented. See: XXX

### Documentation improvements 

Apart from the previously mentioned additions and improvements to diverse aspects of the Devonfw documentation, principally the Devonfw Guide,  there are a number of other important changes. We've incorporated the Devon Modules Developer´s Guide which describes how to extend Devonfw with its Spring-based module system. Furthermore we've significantly improved the Guide to the usage of web services. We've included a Compatibility Guide which details a series of considerations related with different version of the framework as well as Java 7 vs 8. And finally, we've extended the F.A.Q. to provide the users with direct answers to common, Frequently Asked Questions.

### Contributors

XXXX
