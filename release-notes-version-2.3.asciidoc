:toc: macro
toc::[]

:doctype: book
:reproducible:
:source-highlighter: rouge
:listing-caption: Listing

= Devonfw Release notes 2.3 "Dash"

image::images/release-notes-2.3/devonfw-2.3-dash.png[width="680"]

== Release: improving & strengthening the Platform
 
We are proud to announce the immediate release of *devonfw version 2.3* (code named “_Dash_” during development).  This release comes with a bit of a delay as we decided to wait for the publication of OASP4j 2.5. “Dash” contains a slew of new features but in essence it is already driven by what we expect to be the core focus of 2018: strengthening the platform and improving quality.

After one year and a half of rapid expansion, we expect the next release(s) of the devonfw 2.x series to be fully focused on deepening the platform rather than expanding it. That is to say: we should work on improving existing features rather than adding new ones and strengthen the qualitative aspects of the software development life cycle, i.e. testing, infrastructure (CI, provisioning) etc.

“Dash” already is very much an example of this. This release contains the Allure Test Framework as an incubator. This is an automated testing framework for functional testing of web applications. Another incubator is the devonfw Shop Floor which intended to be a compilation of DevOps experiences from the Devonfw perspective. And based on this devonfw has been _OpenShift Primed_ (“certified”) by Red Hat. 

There is a whole range of new features and improvements which can be seen in that light. OASP4j 2.5 changes and imrproves the package structure of the core Java framework. The My Thai Star sample app has now been fully integrated in the different frameworks and the devonfw Guide has once again been significantly expanded and improved. 

== An industrialized platform for the ADcenter

Although less visible to the overall devonfw community, an important driving force was (meaning that lots of work has been done in the context of) the creation of the ADcenter concept towards the end of 2017. Based on a radical transformation of on/near/offshore software delivery, the focus of the ADcenters is to deliver agile & accelerated “Rightshore” services with an emphasis on:

* Delivering Business Value and optimized User Experience
* Innovative software development with state of the art technology
* Highly automated devops; resulting in lower costs & shorter time-to-market

The first two ADcenters, in Valencia (Spain) and Bangalore (India), are already servicing clients all over Europe - Germany, France, Switzerland  and the Netherlands - while ADcenter aligned production teams are currently working for Capgemini UK as well (through Spain).Through the ADcenter, Capgemini establishes industrialized innovation; designed for & with the user. The availability of platforms for industrialized software delivery like devonfw and the Production Line has allowed us to train and make available over a 150 people in very short time. 

The creation of the ADcenter is such a short time is visible proof that we´re getting closer to a situation where devonfw and Production Line are turning into the default development platform for APPS2, thereby standardizing all aspects of the software development life cycle: from training and design, architecture, devops and development,  all the way up to QA and deployment.  

== Changes and new features

=== Devonfw dist 

The *devonfw dist*, or distribution, i.e. the central zip file which contains the main working environment for the devonfw developer, has been significantly enhanced. New features include: 

* Eclipse Oxygen integrated
** CheckStyle Plugin installed and configured
** SonarLint Plugin installed and configured
** Git Plugin installed
FindBugs replaced by SpotBugs and configured
Tomcat8 specific Oxygen configuration
CobiGen Plugin installed
Other Software
Cmder integrated (when console.bat launched)
Visual Studio Code latest version included and preconfigured with https://github.com/oasp/oasp-vscode-ide 
Ant updated to latest.
Maven updated to latest.
Java updated to latest.
Nodejs LTS updated to latest.
@angular/cli included.
Yarn package manager included.
Python3 integrated
Spyder3 IDE integrated in python3 installation
OASP4JS-application-template for Angular5 at workspaces/examples
My Thay Star Sample Application
A more modularized approach has been followed in the current release of My Thai star application to decouple client from implementation details. Which provides better encapsulation of code and dependency management for API and implementation classes. This has been achieved with creation of a new “API” module that contain interfaces for REST services and corresponding Request/Response objects. With existing “Core” module being dependent on “API” module. To read further you can follow the link https://github.com/oasp/my-thai-star/wiki/java-design#basic-architecture-details 
Microservices integrated. An email and Twitter microservice is integrated in my-thai-star. This is just for demonstration purposes. Microservice framework is already part of oasp4j 2.5.0

