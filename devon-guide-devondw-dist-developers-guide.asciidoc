:toc: macro
toc::[]

# Devonfw Dist (IDE) Developers Guide

In this section we focus on how to create a new Devon distribution environment ,in order to publish a new release of the distribution in which new features and functionalities are included.

== Downloading the OASP IDE : 

To create, the new Devon distribution we are going to start from the last OASP-IDE distribution that can be found https://coconet.capgemini.com/sf/go/projects.apps2_devon/frs.oasp4j_ide[here]
Now we have an OASP .zip file so the next step is to extract the file in a folder of our local machine. After extracting the oasp4j-ide-all.zip we rename it to fit to our new devon version.

== Addition of Plugins

The Devon distribution has some plugins that are not included in the OASP distribution so we need to add them to our new version. In other scenario it is possible that some existing plugin might be out of date so we would need to update it.
Plugins to include:

* Sencha
* Cobigen
* Subversion

=== Adding Sencha plugin

Sencha (Ext JS) is a pure JavaScript application framework for building interactive cross platform web applications using techniques such as Ajax, DHTML and DOM scripting. Sencha is the framework used in Devon to create the client side.

*1. Download Sencha Cmd*

First of all we need the last version of the software so we can download it from the https://www.sencha.com[Sencha’s website]. We must look for the Sencha Cmd package.

*2. Install Sencha*

To install the software choose a proper location or directly create a Sencha directory in the software folder of the distribution and select this folder to do the installation. If we install it in other location copy the installation content to your +software\Sencha folder+.
To complete the installation, you need to add the ext folder to the plugin. To do so we must:

* copy from the previous distribution the +software\Sencha\Cmd\default\repo*extract*+ directory and paste it in the  same place of our new distribution.

* copy from the previous distrubution the software\Sencha\Cmd\default\repo\pkgs*ext* directory and paste it in the same place of our new distribution.

*3. Check the installation*

A quick way to check if Sencha is installed is, to open the distribution console (launching the console.bat script) and type the command sencha, the console must return the Sencha version installed.
 
If there is no response we must check our Sencha installation.
But to check if the installation is completely successful we should compile the ExtSample app that we can obtain at the last section of this document. So this check will be delayed until that moment.

=== *Adding Subversion plugin*

Apache Subversion is a software versioning and revision control system distributed as free software under the Apache License and is included as the pre-installed Devon code version control.

*1. Download Subversion client*

Firstly, get the last version of the Subversion client that can be found http://www.collab.net/downloads/subversion[here].

*2.Install subversion client*

As did with the Sencha plugin, you must now install the software in  local machine, by creating a subversion folder in the software directory of the distribution and do the installation directly there. If you install subversion in other location then you must copy and paste the installation content to a subversion folder in the software directory of your distribution.

*3. Check the installation*

To check the installation launch the console.bat script to get environment’s console and type the command svn --version. The console must recognize the command and return our subversion version installed.
 
If the command is not recognized check the Subversion install process.

=== Adding Jasypt client

Jasypt is a java library which allows the developer to add basic encryption capabilities to the projects with minimum effort. Jasypt allows to manage and transparently decrypt encrypted values in .properties files used by Spring applications. In this case the Jasypt client is a tool needed for configuring thehttps://github.com/devonfw/devon-guide/wiki/cookbook-winauth-module[winauth] module in order to generate the encrypted passwords that will be stored in the application.properties file. To facilitate to the developer the usage of the Devon framework the Jasypt client is included as a default plugin in the distribution.

*1. Download the client*

The Jasypt client can be downloaded from the https://www/jasypt.org/[Jasypt site]

*2. Extract the files*

Unzip the jasypt-<VERSION>-dist.zip file into the software directory.

*3. Usage*

To check the Jasypt client functionality ,launch the console.bat script of  distribution and go into the bin folder of the jasypt directory. Within this location one can find the .bat files for Windows execution and we can check a basic encryption as follows
[source,xml]
----
...\software\jasypt\bin>encrypt.bat input=MyPasswordToEncrypt password=MyKey
----

If the Jasypt client is correctly installed we should receive a response like the following
[source,xml]
----
[...]
----OUTPUT-----------------------
aPZ03ig2ZCif8p592V8RNErt1aHdSXpLrwF5ECDJ/1M=
----
To know more about the Jasypt client usage please visit this link

=== *Cobigen*

Cobigen is a server-side code generator to create CRUD operations. Cobigen is not an external plugin but an Eclipse plugin and is included by default in the Devon distribution so there is no installation needed. The only point that we must be aware of is to obtain the last version of the templates that Cobigen uses in order to work properly.

*1.Download the templates*

Again get the last version of the templates from https://github.com/maybeec/tools-cobigen[here]. Clone the repository, and to do so you need a Git client for windows that can be downloaded from https://git-scm.com/downloads[here].
After the installation of the Git client in your local machine , launch the app and clone the Cobigen repository using the command

[source,xml]
----
some\local\directory>git clone https://github.com/may-bee/tools-cobigen.git
----

In local directory now ,you have a new folder tools-cobigen and inside of it you should find a cobigen-templates\templates-oasp directory.

*2.Add the templates to our distribution*

Copy above created templates-oasp directory to the workspaces\main directory of  distribution and rename it as *CobiGen_Templates* (note that is mandatory to use this exact name) so you will have all the templates information in the following location

[source,xml]
----
...\workspaces\main\CobiGen_Templates
----

*3.Preparing Cobigen for first use*

Now in order to use Cobigen follow the steps described in https://github.com/devonfw/devon/wiki/devon-guide-cobigen[this guide]

== Updating node.js

The node.js plugin is included in the OASP IDE distribution but you may need to update it to the last version. To do so proceed as follows:

*1.Check the current version*

In order to check the new version ,open environment’s console by launching the console.bat script. Then ,type the command +node -v+ and the console must recognize the command and return the node version installed.

*2. Download new version*

Download the latest binary (.exe) version of node.js from https://nodejs.org/en/download/[here].

*3.Put it in the distribution*

Now we must replace the node.exe located on software\nodejs by the new node.exe that is just downloaded.

*4.Check the new version*
To check the new version proceed as mentioned in the step 1. The version returned by the console must match the version that we just downloaded.
 
If the command is not recognized or the version doesn’t match the version  just downloaded ,check the installation process.

== Adding sample apps

To complete the distribution ,include some examples of server and client apps. To do that ,use the sample applications that already are created for Devon and OASP and can be found in the https://github.com/devonfw[Devon Github] and the https://github.com/oasp[Oasp Github].
We are going to include:

* Devon Sample
* devon4sencha Sample
* oasp4j sample
* oasp4js sample.

*1.Create a examples directory*

Include the examples in a folder located in the workspaces directory. So create it.

*2.Download the sample apps*

To download the examples of the apps to clone the Devon repositories. To achieve have installed the Git client for windows that can be downloaded https://git-scm.com/downloads[here].

Once the git client is installed in your local machine launch it and access to created examples folder or from windows explorer in the examples folder and right click on the mouse open the Git Bash Here option.

In the Git Bash window use the clone option to get the last version of each of the sample repositories:
For *devon* sample:
[source,xml]
----
...workspaces\examples>git clone https://github.com/devonfw/devon.git
----

For *Sencha* sample:
[source,xml]
----
...workspaces\examples>git clone https://github.com/devonfw/devon4sencha.git
----
For *oasp server* sample:
[source,xml]
----
...workspaces\examples>git clone https://github.com/oasp/oasp4j.git
----

Now, you need to reset to the last stable release. To do so, in the oasp4j project in github go to releases tab or go directly from this https://github.com/oasp/oasp4j/releases[link], copy the number related to the commit of the last release and in the git console go into the oasp4j just created directory and type the following command (replacing the {last-release-commit-number} by the number copied from github)

[source,xml]
----
...workspaces\examples\oasp4j>git reset --hard {last-release-commit-number}
----

For *oasp client* sample:
[source,xml]
----
...workspaces\examples>git clone https://github.com/oasp/oasp4js.git
----

The console will return the result of each clone operation
 
After all above steps ,you must have your local examples folder all the samples.

At this point check the Sencha installation as  explained in the previous section of Sencha’s installation. 
So ,launch the distribution console (with the console.bat script) and go into _workspaces\examples\devon4sencha\ExtSample directory and type the following command
[source,xml]
----
...\workspaces\examples\devon4sencha\ExtSample>sencha app watch
----
The app should be compiled and finally the console must show the message Waiting for changes and the app should be accessible from the browser in the url
http://localhost:1841/ExtSample/

== Updating(Adding scripts)

=== S2 scripts

As these *s2 scripts* are not included in OASP distribution which we downloaded as base, in very first step in this document,are related to the Shared Services funcionality included in Devonfw. The s2-init.bat configures the settings.xml file to connect with an Artifactory Repository. The s2.create.bat generates a new project in the workspaces directory and does a checkout of a Subversion repository inside. Each script needs to be launched from the distribution’s cmd (launching the console.bat script) and some parameters to work properly.

=== Add ps-console.bat 
Add this script in script folder of distribution.

== Modify version number of release:
As, we going to release a new version of devonfw, ensure to change version number in *settings.json* to the one which is to be released.

settings.json can be found as shown in image

